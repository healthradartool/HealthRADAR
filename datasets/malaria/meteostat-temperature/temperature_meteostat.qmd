---
title: "Meteostat Temperature Data"
subtitle: "Meteostat is one of the largest vendors of open weather and climate data."
image: "images/articles-temperature.png"
page-layout: full
title-block-banner: "#EDF3F9"
title-block-banner-color: "#212529"
categories:
  - malaria
  - climate
  - epidemiology
---

## Meteostat Data

Meteostat is a provider of open weather and climate data. It provides historical observations and statistics from different public interfaces, most of which are governmental. Among the data sources are national weather services like the National Oceanic and Atmospheric Administration (NOAA) and Germany's national meteorological service (DWD).

The data is collected in a variety of ways, including:

-   **Automatic weather stations**: These stations are equipped with sensors that measure weather conditions such as temperature, humidity, wind speed and direction, and precipitation.
-   **Human observers**: In some areas, weather conditions are still observed by human observers. This is typically done at airports and other critical locations.
-   **Model data**: In some cases, Meteostat uses model data to fill in gaps in the observations. Model data is generated by computer programs that simulate the atmosphere.

The data is then processed and quality-controlled by Meteostat before it is made available to users.

Meteostat data can be used for a variety of purposes, including:

-   **Research**: Scientists use Meteostat data to study climate change, weather patterns, and other atmospheric phenomena.
-   **Education**: Educators use Meteostat data to teach students about weather and climate.
-   **Business**: Businesses use Meteostat data to make decisions about things like crop planting, energy production, and transportation. Meteostat data is a valuable resource for anyone who wants to learn more about weather and climate. It is available for free to everyone, and it can be used for a variety of purposes.

Both [Python](https://dev.meteostat.net/python/) and [R](https://github.com/jvandens/RMeteostat) libraries exist for interacting with the [Meteostat API](https://dev.meteostat.net/api/). The best source for information is at the [Meteostat Website](https://dev.meteostat.net/guide.html).

Here is an example of how one may get the minimum, maximum and mean temperature values at a monthly scale for a given iso3 code:

::: panel-tabset
## R

``` r
library(RMeteostat)
library(mapview)

api_key <- "-------my key------------"

# Get station list and map them
stations <- get_meteostat_stations()
mapview(stations)

# get daily station data
station = "KMIV0"
start = as.Date("2021-05-01")
end = as.Date("2021-05-31")

df.daily.station <- get_meteostat_daily_station(station, start, end, cApiKey = api_key)

# get daily point
lat = 40.65
lon = -73.75
start = as.Date("2022-03-01")
end = as.Date("2022-04-17")

df.daily.point <- get_meteostat_daily_point(lat, lon, dateStartDate = start, dateEndDate = end, cApiKey = api_key)

# get hourly point
lat = 39.463274533806
lon = -75.058413698121
start = as.Date("2022-05-01")
end = as.Date("2022-05-07")

df.hourly.point <- get_meteostat_hourly_point(lat, lon, start, end, cApiKey = api_key)

# get hourly station
station = "KMIV0"
start = as.Date("2022-05-01")
end = as.Date("2022-05-07")

df.hourly.stn <- get_meteostat_hourly_station(station, start, end, cApiKey = api_key)
```

## Python

``` python
import requests
from geopy.geocoders import Nominatim

import pandas as pd
from meteostat import Point, Monthly


def get_monthly_temperature(iso3, start = datetime(2022, 1, 1), end = datetime(2023, 12, 31)):
  """
  Returns a Pandas dataframe consisting of 2 years worth of monthly temperature data for the given ISO 3 code.

  Args:
    iso3: The ISO 3 code of the location for which to get temperature data.
    start: The month to start collecting data as a datetime object
    end: The month to conclude collecting data as a datetime object

  Returns:
    A Pandas dataframe with the following columns:
      Year: The year of the temperature data.
      Month: The month of the temperature data.
      Temp_Min: The minimum temperature for the month.
      Temp_Avg: The average temperature for the month.
      Temp_Max: The maximum temperature for the month.
  """

  # Create a Point object for the given ISO 3 code.
  tpr = Point(iso3)

  # Get monthly data for 2022 and 2023.
  data = Monthly(tpr, start, end)
  data = data.fetch()

  # Convert the data to a Pandas dataframe.
  df = pd.DataFrame(data[["year", "month", "tmin", "tavg", "tmax"]])

  # Rename the columns.
  df.columns = ["Year", "Month", "Temp_Min", "Temp_Avg", "Temp_Max"]
  
  return df


def get_coordinates_from_iso3(iso3):
  """
  Returns the latitude, longitude, and altitude of the location with the given ISO 3 code.

  Args:
    iso3: The ISO 3 code of the location.

  Returns:
    A tuple of latitude, longitude, and altitude.
  """

  # Get the location's name from the ISO 3 code.
  url = "https://restcountries.com/v3.1/alpha/{}/name".format(iso3)
  response = requests.get(url)
  data = response.json()
  name = data["name"]

  # Get the location's coordinates from the OpenStreetMap API.
  geolocator = Nominatim(user_agent="my-app")
  location = geolocator.geocode(name)
  latitude = location.latitude
  longitude = location.longitude
  altitude = location.altitude

  return latitude, longitude, altitude
```

## bash

``` bash
# Note the ToS at https://dev.meteostat.net/terms.html#use-of-services
curl "https://bulk.meteostat.net/v2/hourly/10637.csv.gz" --output "10637.csv.gz"
```
:::
