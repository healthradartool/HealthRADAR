{
  "hash": "718cceb1f18b24e4c078918504aa95a4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Malaria Atlas Project (MAP)\"\ndescription: \"The Malaria Atlas Project (MAP) is a leading global resource that compiles and analyses spatial data on malaria transmission and prevalence.\"\ndate: 09/23/2024 # mm-dd-yyyy\nimage: \"images/map.png\"\nlightbox: true\nexecute:\n  message: false\n  warning: false\n\nlanguage: \n  title-block-published: \"Last updated\"\n  \npage-layout: full\ntitle-block-banner: \"#EDF3F9\"\ntitle-block-banner-color: \"#212529\"\ncategories:\n  - malaria\n  - epidemiology\n  - spatiotemporal\n  - raster\n---\n\n\n\n::: {.page-tabs .panel-tabset}\n\n## Overview\n\n<h2>About the data</h2>\n\nThe Malaria Atlas Project (MAP) is a leading global resource that compiles and analyses spatial data on malaria transmission and prevalence. The MAP site houses millions of data elements and provides innovative analytical approaches to making sense of complex malaria data. \n\nThe analytical approaches available on the site use geospatial analysis, spatiotemporal statistical methods, machine learning, and computational disease models. \n\nCollaboratively, MAP produces these outputs with a core team based at the Telethon Kids Institute and Curtin University in Perth, Western Australia, and Ifakara Health Institute in Dar es Salaam in Tanzania, and has members in Europe, the United States, Africa and Asia.\n\n<h2>Accessing the data</h2>\n\nMAP data can be accessed directly from [https://data.malariaatlas.org/](https://data.malariaatlas.org/) in various formats, including:  \n\n1. By generating maps and charts on the site by selecting parameters of interest. The site also allows overlying various variables spatially. \n\n2. By downloading CSV and Raster file formats for analysis using other software outside the site. The Downloading process allows filtering counties of interest and subnational categories. \n\n<h2>What does the data look like?</h2>\n\n**Description**\n\nMAP estimated data on malaria covers morbidity, mortality, interventions, and contributing factors, primarily covering the years from 2000 to 2022 (as of 2024). Specifically; \n\n- Incidence and prevalence \n- Mortality \n- Treatment \n- Accessibility factors\n- Insecticide-treated nets (ITNs)\n- Indoor residual spraying\n- Vector occurrence \n- Human population\n- Housing quality \n- Zoonotic malaria\n\nThe data listed above can be found at [https://data.malariaatlas.org/](https://data.malariaatlas.org/)\n\n![MAP-Data landing page](images/figure1.png){width=100% fig-align=\"center\"}\n\n<h2>Key points to consider</h2>\n\n#### Estimates vs. data\nMost information provided by MAP comprises modeled estimates rather than definitive data, which may be characterized with inherent uncertainties. Consequently, it is essential to acknowledge the uncertainties associated with the data when drawing conclusions. \n\n#### Pitfalls of annual data\nMAP data are aggregated annually, which may lead to several pitfalls such as;\n\n- Seasonal variations: Annual data may not capture the seasonal patterns of malaria transmission, which can be influenced by factors such as rainfall, temperature, and vector abundance. This can lead to an over- or underestimation of the disease burden and the impact of interventions.\n\n- Temporal aggregation: Aggregating data annually may mask important short-term dynamics, such as outbreaks or the immediate impact of interventions.\n\n## Working with the data\n\n<h2>How to use this data?</h2>\n\nTabs below have videos that will help you navigate through the MAP data. These guids are also found on the help section of the MAP site at the site's [Help with the platform page](https://data.malariaatlas.org/help?tab=trends)\n\n\n::: {.panel-tabset}\n\n## Trends \n\nTrends Help Guides\n\n\n\n{{< video https://www.youtube.com/embed/wCK6XRCG7gQ >}}\n\n\n\n\n##  Maps\n\nMap Help Guide\n\n\n\n{{< video https://www.youtube.com/embed/qk68bNVZsXo >}}\n\n\n\n\n## Commodities\n\nCase Management Help Guide\n\n\n\n{{< video https://www.youtube.com/embed/OCJcl1PLPH4 >}}\n\n\n\n\n\nInsecticide Treated Nets Help Guide\n\n\n\n{{< video https://www.youtube.com/embed/CRC8a1-M3VY >}}\n\n\n\n\n:::\n\n<h2>How to plot this data?</h2>\n\nMAP data can be downloaded in both CSV and raster formats. We provide an example of how to extract and plot data for each format.\n\n#### CSV format\n\nMAP's CSV data can be downloaded to have both national and subnational level data for the metric(s) of interest. \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n#This code shows how to plot ITN data at a subnational level after downloading a csv format from; \n# https://data.malariaatlas.org/trends?year=2018&metricGroup=Interventions&geographicLevel=admin1&metricSubcategory=ITN&metricType=rate&metricName=use\n\n#The data can be downloaded as explained in the Trends videos above or by clicking the following;\n# \"Interventions\", then \"Subnational\", then the \"Download ITN rate Data\" button. \n\n#loading necessary libraries \n\nlibrary(tidyverse)\n\n#Load the data from the location where the downloaded csv is saved and selecting country and years.\n\ndf <- read.csv(\"Subnational_Unit-data.csv\") %>% \n  filter(National.Unit == \"Malawi\", Year == 2022) \n\n#ploting ITN metrics at subnational level of malawi\n\nggplot(data = df) +\n  geom_col(aes(x = Year, y = Value, fill = Metric), position = position_dodge()) +\n  facet_wrap(~ Name) + \n  scale_x_continuous(breaks = seq(min(df$Year), max(df$Year), by = 2)) +  # Custom x-axis breaks\n  scale_fill_manual(values = c(\"Access\" = \"#1b9e77\", \"Use\" = \"#d95f02\", \"Use Rate\" = \"#7570b3\")) + # Custom colors for each Metric\n  labs(y = \"Per 100 people\", \n       title = str_wrap(\"Estimated subnational ITN use, access, and use rate in Malawi in 2022\", \n                        width = 45),\n        caption = str_wrap(\"Figure shows the estimated subnational ITN use, access, and use rate (ITN use given access) in Malawi in the year 2022. Source: MAP 2024.\",width = 90)) +\n  theme_minimal() +\n  theme(\n    # Center and style the plot title and subtitle\n    plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),\n    plot.subtitle = element_text(hjust = 0.5, size = 14),\n    # Style the axis titles and text\n    axis.title = element_text(size = 14, face = \"bold\"),\n    axis.text = element_text(size = 12),\n    #axis.text.x = element_text(angle = 45, hjust = 1),\n    # Style the plot caption\n    plot.caption = element_text(hjust = 0, size = 10, face = \"italic\"),\n    # Adjust the plot margins\n    plot.margin = margin(t = 20, r = 20, b = 40, l = 20),\n    # Style the facet strip text\n    strip.text = element_text(size = 12, face = \"bold\"),\n    # Place the legend on the right\n    legend.position = \"right\",  \n    # Add light background to each facet panel\n    panel.background = element_rect(fill = \"#F0F0F0\", color = NA),  \n    # Add spacing between panels\n    panel.spacing = unit(0.5, \"lines\"))\n```\n\n::: {.cell-output-display}\n![](map_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n\n\n#### Raster format data extraction and plotting\n\nUsing raster data and this approach is beneficial when analyzing data at a smaller geographic scale than the subnational level, which the CSV format does not accommodate. The example outlined below demonstrates the extraction of data at the district level, but can be utilized at any level.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n#This code shows how to extract and plot selected access related data at a district level level after downloading a raster format from; \n# https://data.malariaatlas.org/. \n\n#To extract data from a raster file, you will need two types of data. 1. Raster file from MAP, and a shapefile containg  polygones you wish to extract data for. \n\n#MAP Raster files can be downloaded by clicking the following once at https://data.malariaatlas.org/\n# \"Maps\", then \"Layer Catalogue\" drop down arrow, then you may select the data theme of interest, such as \"Accessibility\"\n#In this example, we select \"Global Walking Only Travel Time To Healthcare\", then click the download symbol.\n\n#Once we download the raster file, we proceed to download the shapefile of interest. \n#In this example we download Zambia's district level shapefille from https://data.grid3.org/\n#i.e (https://data.grid3.org/datasets/d27357c640394f11943316e36cebaba3_0/about)\n\n#loading necessary libraries \n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(terra)\nlibrary(patchwork)\n\n\n#Load the data from the location where the downloaded shapefile and raster files are saved.\n#Here we filter by provinces of interest\nshp_zambia <- sf::st_read(\n  file.path(\"Zambia_-_Administrative_District_Boundaries_2022\", \n            \"Zambia_-_Administrative_District_Boundaries_2022.shp\"), \n  quiet = TRUE) %>% \n  filter(PROVINCE %in% c(\"Eastern\", \"Northern\", \"Southern\", \"Western\")) \n\n\n#loading raster file containing walking only travel time to healthcasre\nraster_walk <- rast(\"Global_Walking_Only_Travel_Time_To_Healthcare_ZMB.tiff\")\n\n#extracting mean walking time to health facility in each district \ndf_walk <- terra::extract(raster_walk, shp_zambia, mean, na.rm = T, ID = T) %>% \n    as.data.frame() %>% tibble::rownames_to_column() %>%\n    mutate(OBJECTID = as.numeric(rowname)) %>% #OBJECTID is the unique ID in the shapefile\n    left_join(shp_zambia, by = c(\"OBJECTID\"))\n\n#Splitting the dataframe by province to allow easy plotting.\n\nlist_district_df <- split(df_walk, df_walk$PROVINCE)\n\n#Function below Defines a function that creates a ggplot for a given dataframe 'df'\nfun_plot <- function(df){\n  ggplot(data = df, aes(\n    y = reorder(DISTRICT, Global_Walking_Only_Travel_Time_To_Healthcare_ZMB), \n    x = Global_Walking_Only_Travel_Time_To_Healthcare_ZMB)) +\n    # Initializes ggplot with data and aesthetics; reorder districts by travel time\n    geom_col(fill = \"#1b9e77\") +\n    # Add bar columns with specified fill color\n    geom_text(aes(label = round(Global_Walking_Only_Travel_Time_To_Healthcare_ZMB)), \n              hjust = -0.2, size = 2.5) +\n    # Adds labels to bars showing rounded travel time\n    labs(x = \"\", y = \"\", title = df$PROVINCE) +\n    # Sets axis labels to blank and title to province name\n    xlim(0, 450) +\n    # Sets x-axis limits from 0 to 450\n    theme_bw() + \n    # Customizing plot appearance: borders, text sizes, and colors\n    theme(\n      panel.border = element_rect(colour = \"black\", fill=NA, size=0.5),\n      plot.title = element_text(hjust = 0.5, size = 10, face = \"bold\"),\n      axis.text.x = element_text(size = 8, color = \"black\"), \n      axis.text.y = element_text(size = 8, color = \"black\"),\n      axis.title.x = element_text(size = 8),\n      axis.title.y = element_text(size = 8),\n      legend.title = element_text(size = 8, colour = 'black'),\n      legend.text = element_text(size = 8, colour = 'black'),\n      legend.key.height = unit(1, \"cm\"))\n}\n\n\n# Applying 'fun_plot' to each dataframe in 'list_district_df' and combine plots\nReduce(`+`, lapply(list_district_df, fun_plot)) + \n  plot_annotation(\n    # Adds annotations to the combined plot\n    title = str_wrap(\"Average walking time to access healthcare in Zambia's \n                     Eastern, Northen, Southern, and Western province, by district\"),\n    caption = str_wrap(\"This illustrative plot shows the average walking time in selected provinces by \n    district. The figure indicates that Northern province has districts with the highest \n    walking time to access healthcare\", width = 100),\n    theme = theme(\n      plot.title = element_text(hjust = 0.5, face = \"bold\"),\n      plot.caption = element_text(hjust = 0.5)))\n```\n\n::: {.cell-output-display}\n![](map_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n<h2>How can this data be used in disease modelling?</h2>\n\nAs earlier alluded, that MAP provides modeled estimates for various interventins including IRS. Below, we show how IRS estimates from MAP can can be used for disease modeling. \n\n#### Preparing the data\n\nThe code below demonstrates how IRS data downloaded from MAP can be prepared for modeling, using data from Zambia as an illustrative example. In the code, we show that the coverage data are presented on a yearly basis, as depicted in the plot. However, further manipulation is required to meet most mathematical modeling requirements. Specifically, in this example, we generate the absolute number of households sprayed and, subsequently, the number of individuals protected.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n#Installing pacman package that install and calls packages not installed\n#install.packages(\"pacman\") \n\n# Load packages \nlibrary(deSolve)\nlibrary(tidyverse)\nlibrary(readxl)\n\n#Read in IRS data.\n\nIRSdata <- read.csv(\"National Unit-data.csv\") %>% \n  mutate(sprayed = (Value/100)*3600000, #estimating number of households sprayed) \n         time = c(seq(0, 3285, by = 365))) #time steps for each year for 10 years\n            \n\n#Coverege plot\n\nggplot(data = IRSdata, aes(\n    y = Value, \n    x = Year)) +\n    geom_line(color = \"#d95f02\", linewidth = 0.8) +\n    geom_text(aes(label = round(Value)), \n              hjust = -0.2, size = 2.5) +\n    labs(x = \"Year\", y = \"IRS Coverage (%)\", title = \"Countrywide IRS coverage for Zambia\",\n         caption = str_wrap(\"This plot illustrates yearly country-wide IRS coverage from 2013 to 2022. The graph reveals fluctuations in coverage over the years, with notable low in 2018.\",width = 90)) +\n    scale_x_continuous(breaks = round(seq(min(IRSdata$Year), max(IRSdata$Year), by = 1))) + # Rounding x-axis values\n    theme_minimal() +\n    theme(\n        plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),\n        plot.subtitle = element_text(hjust = 0.5, size = 14),\n        axis.title = element_text(size = 14, face = \"bold\"),\n        axis.text = element_text(size = 12),\n        plot.caption = element_text(hjust = 0, size = 10, face = \"italic\"),\n        plot.margin = margin(t = 20, r = 20, b = 40, l = 20),\n        strip.text = element_text(size = 12, face = \"bold\"),\n        legend.position = \"right\",  \n        panel.background = element_rect(fill = \"#F0F0F0\", color = NA),  \n        panel.spacing = unit(0.5, \"lines\")\n    )\n```\n\n::: {.cell-output-display}\n![](map_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n#### Assumptions \n\nTo create a robust model, it's crucial to articulate the assumptions underlying the dynamics. In our illustrative model\nin the code below represented in the SEIRS (Susceptible, Exposed, Infected, Recovered) model. We assumed the following:\n\n- Constant population of about 17,000,000, with 5 individuals per household. \n- Constant seasonality variability  - using seasonal forcing function\n- All areas in the focus country are eligible for IRS\n- Vector population is at equilibrium\n- Transmission occurs through the contact between infected mosquitoes and susceptible humans, and vice versa.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n# Define basic dynamic Human-static Vector model ####\nseirs <- function(t, x, parms)  {\n  with(as.list(c(parms, x)), {\n    M = Sm+Em+Im\n    P = S+E+I+R\n    m = M/P\n    \n    IRSc = IRSdata$sprayed*pp_h/P # proportion of the population covered by Current spraying cycle\n    IRSt = IRSdata$time\n    IRSe = phi*pmin(1, IRSc) # effective IRS coverage\n    \n    IRS <- approx(IRSt, IRSe, t, method = \"constant\", rule = 2)$y # annual IRS implementation\n    seasn = seasn_0*(1 + amp*cospi((t - psi)/360)^2)# Seasonality\n    IRSs <- IRS*seasn # Seasonal implementation\n    \n    lambda = ((a^2*b*c*m*I/P)/(a*c*I/P+mu_m)*(gamma_m/(gamma_m+mu_m)))*(1-IRSs)\n    \n    dSm=0\n    dEm=0\n    dIm=0\n    dS= mu_h*P -lambda*S + rho*R - mu_h*S\n    dE= lambda*S - (gamma_h + mu_h)*E\n    dI=gamma_h*E - (r + mu_h)*I\n    dR=r*I - (rho + mu_h)*R\n    \n    dCInc = lambda*S\n    \n    output <- c(dSm, dEm, dIm, dS, dE, dI, dR, dCInc)\n    list(output)\n  })\n}\n# Input definitions ####\n#Initial values\nstart<-c(Sm = 30000000, Em=20000000, Im=800000, S=10000000, E=5000000, I=2000000,R=0, CInc = 0 )\n\n# Parameters\nparms <- c(a = 0.3, #human feeding rate per mosquito\n           b = 0.5, # transmission efficiency M->H\n           c=0.5, # transmission efficiency H->M\n           gamma_m = 1/10, #rate of onset of infectiousness in mosquitoes\n           mu_m = 1/15, #natural birth/death rate in mosquitoes\n           mu_h = 1/(70*365), #natural birth/death rate in humans\n           gamma_h = 1/20, #rate of onset of infectiousness in humans\n           r=1/50, # recovery rate \n           rho = 1/(1*365), # \n           \n           pp_h = 5, # number people per household\n           no_hh = 3600000, # total number of households\n           phi = 0.8, # IRS effectiveness\n           seasn_0 = 0.7, #\n           amp = 0.7, # Amplitude\n           psi = pi # Phase\n)\n\n# Vector of timesteps\nnoy = 10 # number of years \ntimes <- seq(0, 364*noy, 1) # time in days\n\n# Run models ####\n\nhm<-ode(times=times, y=start, func=seirs,parms=parms)\n```\n:::\n\n\n\n#### Incidence\n\nThe code below demonstrates how to plot model outputs. In this example, we plot daily incidence from 2013 to 2022. The choice of model output to plot depends on the goals of the modeler or stakeholders. For instance, plotting incidence for this model may highlight the estimated impact of IRS on cases over time. However, it is important to note that the outputs of this model were not calibrated to real data and therefore do not reflect actual impacts or real case numbers.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nhmplot<-as_tibble(as.data.frame(hm)) %>% \n  mutate(P=S+E+I+R,\n         Inc = c(0, diff(CInc))) %>% \n  pivot_longer(names_to = \"variable\", cols = !1) %>% \n  mutate(model = \"human\") %>% filter(variable == \"Inc\")\n\n\nggplot(data = hmplot, aes(\n    y = value, \n    x = time / 365 + 2013)) +  # Convert time to years starting from 2013\n    geom_line(color = \"#7570b3\", linewidth = 0.8) +\n    labs(x = \"Year\", y = \"Incidence\", title = \"Daily country-wide incidence\",\n         caption = str_wrap(\"This example plot illustrates the daily country-wide incidence of malaria from 2014 to 2022. The graph reveals fluctuations in incidence over the years, with notable peaks in 2018. This peak coincides with the period when IRS coverage was at its lowest, highlighting the potential impact of reduced intervention efforts on malaria transmission.\",width = 90)) +\n    ylim(25000, 50000) + \n\n    scale_x_continuous(breaks = seq(2013, 2024, by = 2)) +  # Set x-axis breaks to multiples of 2 years\n    xlim(2014, 2022) + \n    theme_minimal() +\n  \n    theme(\n        plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),\n        plot.subtitle = element_text(hjust = 0.5, size = 14),\n        axis.title = element_text(size = 14, face = \"bold\"),\n        axis.text = element_text(size = 12),\n        plot.caption = element_text(hjust = 0, size = 10, face = \"italic\"),\n        plot.margin = margin(t = 20, r = 20, b = 40, l = 20),\n        strip.text = element_text(size = 12, face = \"bold\"),\n        legend.position = \"right\",  \n        panel.background = element_rect(fill = \"#F0F0F0\", color = NA),  \n        panel.spacing = unit(0.5, \"lines\") )\n```\n\n::: {.cell-output-display}\n![](map_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n:::",
    "supporting": [
      "map_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}