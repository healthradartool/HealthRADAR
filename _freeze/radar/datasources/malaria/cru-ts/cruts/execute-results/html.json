{
  "hash": "2cd3b38f6485fb5081be5bd8d213c0a4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"CRU TS\"\ndescription: \"Climate Research Unit Timeseries (CRU TS) Gridded precipitation and other meteorological variables since 1901.\"\ndate: 08/21/2024 # mm-dd-yyyy\ndraft: false\nimage: \"images/crulogo.png\"\n\ncategories:\n  - climate\n  - gridded\n  - observed\n  - rainfall\n  - temperature\n  - global\n  - monthly\n---\n\n\n\n\n::: {.page-tabs .panel-tabset}\n\n## Overview\n\n<h2>About the data</h2>\n\nThe CRU TS (Climatic Research Unit gridded Time Series) dataset is a global, high-resolution, land-based climate dataset that provides monthly records on a 0.5° grid (approximately 55.5 km by 55.5 km at the equator, varying slightly by latitude). The dataset is derived by the interpolation of monthly climate anomalies from extensive networks of weather station observations, offering data from 1901 onwards. This observational dataset consists of ten observed and derived climate variables, such as temperature and precipitation (see Variables list below), making it useful for many types of users, in diverse research areas and applications and has been widely adopted in research and policy work.\n\nUpdated annually, the dataset follows a versioning system, CRU TS vX.YY. Where 'X' reflects major updates in methodology and 'YY' indicates minor refinements, extending its temporal coverage and improving data quality, compared to previous versions.\n\nFor more information regarding all CRU datasets see [CRU-data](https://crudata.uea.ac.uk/cru/data/hrg/)\n\nUsers can also find more information about the CRU dataset here:\n\n- Climate Data Guide: [CRU TS Gridded precipitation and other meteorological variables since 1901](https://climatedataguide.ucar.edu/climate-data/cru-ts-gridded-precipitation-and-other-meteorological-variables-1901)\n\n- Climate Data Store: [Temperature and precipitation gridded data for global and regional domains derived from in-situ and satellite observations](https://cds.climate.copernicus.eu/datasets/insitu-gridded-observations-global-and-regional?tab=overview)\n\n\n\n**Summary**\n\n| | |\n--- | --- |\n| **Name** | CRU TS |\n| **Version** | 4.08 |\n| **Institution** | [CRU](https://www.uea.ac.uk/groups-and-centres/climatic-research-unit) |\n| **Product type** | gridded observed |\n| **Domain** | global land (excluding Antarctica) |\n| **Resolution** |  0.5° x 0.5° (~55.5km x ~55.5km) |\n| **Period** | 1901-2023 |\n| **Frequencies** | monthly |\n| **Variables** | precipitation, temperature, others  |\n| **Update frequency** | annual |\n\n\n\n<br/>\n**Variables**\n<br/>\n\n| **Variable Name** | **Variable Description** | **Units** |\n| ----- | -------------------------------------------------------| ----------------------- |\n| cld   | cloud cover                                        \t| percentage (%)      \t|\n| dtr   | diurnal 2-meter temperature range                  \t| degrees Celsius     \t|\n| frs   | frost day frequency                                \t| days                \t|\n| pet   | potential evapo-transpiration                      \t| millimetres per day \t|\n| pre   | precipitation rate                                 \t| millimetres per month   |\n| tmp   | monthly average daily mean 2-meter temperature     \t| degrees Celsius     \t|\n| tmn   | monthly average daily minimum 2-meter temperature  \t| degrees Celsius     \t|\n| tmx   | monthly average daily maximum 2-meter temperature  \t| degrees Celsius     \t|\n| vap   | vapour pressure                                    \t| hectopascals (hPa)  \t|\n| wet   | wet day frequency                                  \t| days                \t|\n\n\n<br/>\n\n<h2>Accessing the data</h2>\n\nCRU is a widely used dataset and can be downloaded from several different platforms.\n\n#### Data Creator\nThe Climatic Research Unit (CRU) at the University of East Anglia is the creator of this dataset. Users can download it directly from their [website](https://crudata.uea.ac.uk/cru/data/hrg/), where a list of available datasets is provided, with the latest version listed at the top. When downloading from CRU, the full global dataset must be downloaded. The data is available in ASCII and NetCDF formats.\n\n|  **Version**   | **Variables**      \t| **Resolution** | **File Format**   \t|\n|----------------|------------------------|----------------|-----------------------|\n| 4.08 (1901 - 2023)  | cld, dtr, frs, pet, pre, tmp, tmn, tmx, vap, wet \t| 0.5° (~55.5km x ~55.5km)  \t| netCDF (.nc), ASCII (.dat) |\n\n#### Climate Data Store\nThe [Climate Data Store](link to page) also provides a version of this dataset for users to download. It can be accessed [here](https://cds.climate.copernicus.eu/datasets/insitu-gridded-observations-global-and-regional?tab=overview). The version of the CRU dataset kept on the Climate Data Store is not always the latest version. Data provided in NetCDF format.\n\n|  **Version**   | **Variables**      \t| **Resolution** | **File Format**   \t|\n|----------------|------------------------|----------------|-----------------------|\n| 4.03 (1901 - 2019)  | pre, tmp, tmn, tmx \t| 0.5° (~55.5km x ~55.5km), 1.0° (~111km x ~111km), 2.5° (~277.5km x ~277.5km)  | netCDF (.nc) |\n\n#### KNMI Climate Explorer\nThe [KNMI Climate Explorer](link to page) is another platform where users can download CRU data. The dataset can be specified on their [Monthly Observations page](https://climexp.knmi.nl/selectfield_obs2.cgi?id=someone@somewhere), where the latest version of CRU is usually available. Users can download data for a specific grid point or area or create a custom subset using a mask (e.g., a shapefile). Data provided in NetCDF format.\n\n|  **Version**   | **Variables**      \t| **Resolution** | **File Format**   \t|\n|----------------|------------------------|----------------|-----------------------|\n| 4.08 (1901 - 2023) | cld, dtr, frs, pet, pre, tmp, tmn, tmx, vap\t| 0.5° (~55.5km x ~55.5km), 1.0° (~111km x ~111km), 2.5° (~277.5km x ~277.5km) | netCDF (.nc) |\n\n\n<h2>Key points to consider</h2>\n\nCRU provides users with the number of stations used to build each datum within the CRU TS dataset. The NetCDF-formatted ([CF-1.4](http://cfconventions.org/) compliant) CRU TS data output files (for all variables except PET) contain two data variables, the named one, (i.e., ‘tmp’), and a station count (‘stn’) giving the number of stations. If working with ASCII text output files, CRU also publishes a separate station count metadata file. The station counts vary between 0 (no cover, climatology inserted, see Interpolation above), and eight (the maximum station count for interpolation). The ‘stn’ data may be used to quantify uncertainty, most particularly by excluding cells with a zero count, as these will have been set to the default climatology. The station count can vary widely through space and time and per variable, see plot xx below.\n\n### Strengths\n\n- The dataset is widely used and evaluated.\n- It provides a number of useful variables for malaria modelling.\n- It provides and long and continuous record.\n\n### Limitations\n\n- The skill of the dataset relies heavily on the density of the station network. The density over southern Africa is very poor with some areas not having any available stations, or they are are very far away in climatically very different regions.\n- The data is monthly which limits the usefulness of the dataset which may require higher temporal resolution data.\n- The stations come from a number of different networks and they are not strictly homogenized so caution should be use in any trend analysis.\n\n\n### Citing the data\n\nHarris, I., Osborn, T.J., Jones, P. et al. Version 4 of the CRU TS monthly high-resolution gridded multivariate climate dataset. Sci Data 7, 109 (2020). https://doi.org/10.1038/s41597-020-0453-3\n\n### Terms of use\n\nThe various datasets on the CRU website are provided for all to use, provided the sources are acknowledged. Acknowledgment should preferably be by citing one or more of the papers referenced. The website can also be acknowledged if deemed necessary.\n\n\n## Visualisations  \n\n**Spatial plots of key variables**\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(terra)\nlibrary(ggplot2)\nlibrary(tidyterra) \nlibrary(stringr)\n\n\n# Read the NetCDF file using terra\nfig1_mean_annual_rainfall <- rast(\"data/Fig1_MeanAnnualRainfall_CRU_TS-4.08_1991-2020_SouthernAfrica.nc\")\n\n# Make 0 values NA\nfig1_mean_annual_rainfall[fig1_mean_annual_rainfall == 0] <- NA\n\n# Create the plot\nggplot() +\n  geom_spatraster(\n    data = fig1_mean_annual_rainfall,\n    na.rm = TRUE\n  ) +\n  scale_fill_continuous_health_radar(\n    option = \"plasma\", \n    na.value = \"white\",\n    name = \"Mean Rainfall\\n(mm/year)\"  # Removed trailing comma\n  ) +\n  coord_sf(\n    xlim = c(10, 40),\n    ylim = c(-35, 0)\n  ) +\n  theme_health_radar() +\n  labs(\n    title = \"Mean Annual Rainfall for Southern Africa (1991-2020)\",\n    x = \"Longitude\", \n    y = \"Latitude\",\n    caption = str_wrap(\"Mean annual rainfall over Southern Africa from 1991-2020, derived from CRU TS v4.08 data. Data Source: Climatic Research Unit (University of East Anglia), CRU TS v4.08 Dataset (https://doi.org/10.1038/s41597-020-0453-3)\", width = 75)\n  )\n```\n\n::: {.cell-output-display}\n![](cruts_files/figure-html/unnamed-chunk-2-1.png){fig-pos='H' width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfig2_mean_monthly_avg_temperature <- rast(\"data/Fig2_MeanMonthlyAverageTemp_CRU_TS-4.08_1991-2020_SouthernAfrica.nc\")\n\n# Create the plot\nggplot() +\n  geom_spatraster(\n    data = fig2_mean_monthly_avg_temperature,\n    na.rm = TRUE\n  ) +\n  scale_fill_continuous_health_radar(\n    option = \"plasma\", \n    na.value = \"white\",\n    name = \"Mean Temperature\\n(Celsius)\"  # Removed trailing comma\n  ) +\n  coord_sf(\n    xlim = c(10, 40),\n    ylim = c(-35, 0)\n  ) +\n  theme_health_radar() +\n  labs(\n    title = \"Mean Monthly Average Temperature for Southern Africa (1991-2020)\",\n    x = \"Longitude\", \n    y = \"Latitude\",\n    caption = str_wrap(\"Mean monthly average temperature over Southern Africa from 1991-2020, derived from CRU TS v4.08 data. Data Source: Climatic Research Unit (University of East Anglia), CRU TS v4.08 Dataset (https://doi.org/10.1038/s41597-020-0453-3)\", width = 75)\n  )\n```\n\n::: {.cell-output-display}\n![](cruts_files/figure-html/unnamed-chunk-3-1.png){fig-pos='H' width=672}\n:::\n:::\n\n\n\n**Key example plots for a selected location**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\n\nfig3_PRCPTOT_mon <- read_csv(\"data/Fig3_PRCPTOT_mon_CRU_TS-4.08_199101-202012_climatology_Bulawayo.csv\")\n\nfig3_tas_mon <- read_csv(\"data/Fig3_tas_mon_CRU_TS-4.08_199101-202012_climatology_Bulawayo.csv\")\n\n# Create the climatology plot\nggplot() +\n  # Rainfall bars\n  geom_col(\n    data = fig3_PRCPTOT_mon,\n    aes(x = time, y = PRCPTOT, fill = \"Rainfall\"),\n    alpha = 0.6\n  ) +\n  # Temperature line\n  geom_line(\n    data = fig3_tas_mon,\n    aes(x = time, y = tas * 10, color = \"Temperature\"),\n    linewidth = 1\n  ) +\n  geom_point(\n    data = fig3_tas_mon,\n    aes(x = time, y = tas * 10, color = \"Temperature\")\n  ) +\n  # Use standardized color scales with explicit values\n  scale_fill_manual(values = setNames(theme_health_radar_colours[1], \"Rainfall\")) +\n  scale_colour_manual(values = setNames(theme_health_radar_colours[2], \"Temperature\")) +\n  # Primary axis (rainfall)\n  scale_y_continuous(\n    name = \"Monthly Rainfall (mm)\",\n    sec.axis = sec_axis(~./10, name = \"Temperature (°C)\")\n  ) +\n  scale_x_continuous(\n    breaks = 1:12,\n    labels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \n               \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\")\n  ) +\n  theme_health_radar() +\n  theme(\n    axis.title.y.right = element_text(color = theme_health_radar_colours[2]),  # Match temperature line color\n    axis.text.y.right = element_text(color = theme_health_radar_colours[2]),   # Match temperature line color\n    axis.title.y.left = element_text(color = theme_health_radar_colours[1]),   # Match rainfall bar color\n    axis.text.y.left = element_text(color = theme_health_radar_colours[1]),    # Match rainfall bar color\n    legend.position = \"none\"\n  ) +\n  labs(\n    title = \"Seasonal Cycle of Rainfall and Temperature in Bulawayo\",\n    x = \"Month\",\n    caption = str_wrap(\"Monthly climatology of rainfall (bars) and average temperature (line) for Bulawayo. Zimbabwe, for the period 1991-2020, derived from CRU TS v4.08 data. We see Bulawayo experiences a signioficant propotion of it's rainfall in the warm summer months and is very dry in the temperate winter months. Data Source: Climatic Research Unit (University of East Anglia), CRU TS v4.08 Dataset (https://doi.org/10.1038/s41597-020-0453-3)\", width = 75)\n  )\n```\n\n::: {.cell-output-display}\n![](cruts_files/figure-html/unnamed-chunk-4-1.png){fig-pos='H' width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfig4_PRCPTOT_mon <- read_csv(\"data/Fig4_PRCPTOT_mon_CRU_TS-4.08_190101-202312_Bulawayo.csv\")\n\n# Create the timeseries plot\nggplot() +\n  # Rainfall bars\n  geom_col(\n    data = fig4_PRCPTOT_mon,\n    aes(x = time, y = PRCPTOT, fill = \"Rainfall\"),\n    alpha = 0.6\n  ) +\n  # Station count line\n  geom_point(\n    data = fig4_PRCPTOT_mon,\n    aes(x = time, y = stn * 40, color = \"Station Count\"),\n    linewidth = 0.8\n  ) +\n  # Use standardized color scales with explicit values\n  scale_fill_manual(values = setNames(theme_health_radar_colours[1], \"Rainfall\")) +\n  scale_colour_manual(values = setNames(theme_health_radar_colours[2], \"Station Count\")) +\n  # Primary axis (rainfall)\n  scale_y_continuous(\n    name = \"Monthly Rainfall (mm)\",\n    sec.axis = sec_axis(\n      ~./40, \n      name = \"Number of Stations\",\n      breaks = seq(0, 10, 2),  # Force breaks from 0 to 10\n    )\n  ) +\n  scale_x_date(\n    date_breaks = \"10 years\",\n    date_labels = \"%Y\"\n  ) +\n  theme_health_radar() +\n  theme(\n    axis.title.y.right = element_text(color = theme_health_radar_colours[2]),\n    axis.text.y.right = element_text(color = theme_health_radar_colours[2]),   \n    axis.title.y.left = element_text(color = theme_health_radar_colours[1]),\n    axis.text.y.left = element_text(color = theme_health_radar_colours[1]),    \n    legend.position = \"none\"\n  ) +\n  labs(\n    title = \"Monthly Rainfall and Station Count in Bulawayo (1901-2023)\",\n    x = \"Year\",\n    caption = str_wrap(\"Monthly rainfall time series for Bulawayo, Zimbabwe, from 1901 to 2023, with black dots indicating the number of stations contributing to each monthly rainfall value. The data is derived from CRU TS v4.08. Notably, there is a decrease in the number of contributing stations from around 2010 onwards. Caution is advised when interpreting values calculated without any station data contributions. Data Source: Climatic Research Unit (University of East Anglia), CRU TS v4.08 Dataset (https://doi.org/10.1038/s41597-020-0453-3)\", width = 75)\n  )\n```\n\n::: {.cell-output-display}\n![](cruts_files/figure-html/unnamed-chunk-5-1.png){fig-pos='H' width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfig5_tas_mon <- read_csv(\"data/Fig5_tas_mon_CRU_TS-4.08_190101-202312_Bulawayo.csv\")\n\n# Create the timeseries plot\nggplot() +\n  # Temperature bars\n  geom_col(\n    data = fig5_tas_mon,\n    aes(x = time, y = tas - 273.15, fill = \"Temperature\"),\n    alpha = 0.6\n  ) +\n  # Station count line\n  geom_point(\n    data = fig5_tas_mon,\n    aes(x = time, y = stn * 4, color = \"Station Count\"),\n    linewidth = 0.8\n  ) +\n  # Use standardized color scales with explicit values\n  scale_fill_manual(values = setNames(theme_health_radar_colours[1], \"Temperature\")) +\n  scale_colour_manual(values = setNames(theme_health_radar_colours[2], \"Station Count\")) +\n  # Primary axis (temperature)\n  scale_y_continuous(\n    name = \"Monthly Temperature (°C)\",\n    sec.axis = sec_axis(\n      ~./4, \n      name = \"Number of Stations\",\n      breaks = seq(0, 10, 2),  # Force breaks from 0 to 10\n    )\n  ) +\n  scale_x_date(\n    date_breaks = \"10 years\",\n    date_labels = \"%Y\"\n  ) +\n  theme_health_radar() +\n  theme(\n    axis.title.y.right = element_text(color = theme_health_radar_colours[2]),\n    axis.text.y.right = element_text(color = theme_health_radar_colours[2]),   \n    axis.title.y.left = element_text(color = theme_health_radar_colours[1]),\n    axis.text.y.left = element_text(color = theme_health_radar_colours[1]),    \n    legend.position = \"none\"\n  ) +\n  labs(\n    title = \"Monthly Temperature and Station Count in Bulawayo (1901-2023)\",\n    x = \"Year\",\n    caption = str_wrap(\"Monthly average temperature time series for Bulawayo, Zimbabwe, from 1901 to 2023, with black dots indicating the number of stations contributing to each monthly average temperature value. The data is derived from CRU TS v4.08.  The number of contributing stations remains at an adequate level throughout the time series, with a minimum of three stations. Data Source: Climatic Research Unit (University of East Anglia), CRU TS v4.08 Dataset (https://doi.org/10.1038/s41597-020-0453-3)\", width = 75)\n  )\n```\n\n::: {.cell-output-display}\n![](cruts_files/figure-html/unnamed-chunk-6-1.png){fig-pos='H' width=672}\n:::\n:::\n\n\n\n\n## Modelling Example \n\n<h2>How can this data be used in disease modelling?</h2>\n\nMalaria is a seasonal disease with regular fluctuations in incidence. Even in endemic countries with year-round cases peak during the rainy season (November to April for most southern African countries). During this time, temperature and rainfall conditions favour vector development, thereby increasing the total mosquito population. A few specific variables have been experimentally shown to be temperature-sensitive:\n\n-   The parasite extrinsic incubation period\n-   Vector gonotrophic cycle\n-   Human biting rate\n-   Daily survival/death rate of larval and adult vectors\n-   The egg to adult development rate\n\nThe egg to adult development rate is also rainfall-sensitive, as is oviposition and the carrying capacity of the environment.\n\n### Seasonal forcing function\n\nGenerally, we introduce a forcing function to mimic the seasonal pattern of temperature and rainfall. In this case, we use the cossine function, where $amp$ represents the amplitude of the curve and the strength of the seasonality and $phi$ is the phase angle used to offset the start of the period. It is important to note, however, that this merely represents the overall pattern of environmental conditions.\n\n$$\nseas = amp \\times (1 + \\cos(2 \\pi \\times time - phi))\n$$\n\n### Preparing the data \n\nUsing the CRU TS dataset, we obtain specific values for temperature over time, and model the historic impact of climatology on the vector population and subsequent incidence. We use mean air temperature as a proxy for surface temperatures.\n\n\n\n\n\n\n\nThere are different approaches to explicitly include environmental conditions into an infectious disease model. For this example, we use three equations from Traore (2017) and Agusto (2015; 2020) defining the effect of climate on the dynamics of malaria transmission. Specifically, the example below describes temperature-dependent human biting rate and mosquito mortality, as well as rainfall-dependent environmental carrying capacity.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the data \ntemperature_values <- read_csv(\"data/tas_mon_CRU_TS-4.08_190101-202312_Bulawayo.csv\") |> \n  select(time, tas) |> \n  mutate(tas = tas-273) |> #convert from Kelvin to Celsius\n  filter(time >= ymd(\"2010-01-01\") & time <= ymd(\"2020-12-31\")) # start date of data\n\nggplot() +\n  geom_line(data = temperature_values, aes(x = time, y = tas), colour = theme_health_radar_colours[13]) +\n  geom_point(data = temperature_values, aes(x = time, y = tas), colour = theme_health_radar_colours[13]) +\n  theme_health_radar() +\n  labs(\n    title = str_wrap(\"Average Mean Surface Air Temperature values in Bulawayo from 2000 to 2020\", width = 50),\n    x = \"Year\",\n    y = \"Temperature values (Celsius °)\",\n    caption = str_wrap(\"Changes in temperature over time. Temperature ranges of have an impact on vector competence, depending on the primary Anopheles vector in the area and its behavioural habits. Source: tas_mon_CRU-TS 4.08\")\n  ) +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](cruts_files/figure-html/unnamed-chunk-8-1.png){fig-pos='H' width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the data \nrainfall_values <- read_csv(\"data/PRCPTOT_mon_CRU_TS-4.08_190101-202312_Bulawayo.csv\") |> \n  select(time, PRCPTOT) |> \n  filter(time >= ymd(\"2010-01-01\") & time <= ymd(\"2020-12-31\")) # start date of data\n\nggplot() +\n  geom_line(data = rainfall_values, aes(x = time, y = PRCPTOT), colour = theme_health_radar_colours[8]) +\n  geom_point(data = rainfall_values, aes(x = time, y = PRCPTOT), colour = theme_health_radar_colours[8]) +\n  theme_health_radar() +\n  scale_colour_manual_health_radar() +\n  labs(\n    title = \"Total monthly Precipitation in Bulawayo from 2000 to 2020\",\n    x = \"Year\",\n    y = \"Rainfall values (mm)\",\n    caption = str_wrap(\"Changes in rainfall over time. For instance, 2017 has very high rainfall values, potentially leading to more wetlands for mosquito breeding. Excessive rainfall may also flush out breeding sites. Source: PRCPTOT_mon_CRU-TS 4.08\")\n  ) +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](cruts_files/figure-html/unnamed-chunk-9-1.png){fig-pos='H' width=672}\n:::\n:::\n\n\nWe incorporate these values into the mathematical model. Note that other models may include other variables such as altitude and humidity.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Turn monthly data into daily data\ndaily_temperature_values <- temperature_values |>\n  complete(time = seq(ymd(\"2010-01-01\"), max(time), by = \"day\")) |>\n  fill(tas, .direction = \"downup\")\n\ndaily_rainfall_values <- rainfall_values |>\n  complete(time = seq(ymd(\"2010-01-01\"), max(time), by = \"day\")) |>\n  fill(PRCPTOT, .direction = \"downup\")\n\nset.seed(500)\n\n# Time points for the simulation\nY = 10 # Years of simulation\ntimes <- seq(0, 365*Y, by = 1)\n\n\n# SEACR-SEI model\nseacr <- function(times, start, parameters, temp_func, rain_func) { \n  with(as.list(c(start, parameters)), {\n    P = S + E + A + C + R  \n    M = Sm + Em + Im\n    m = M / P\n    \n    # Climate variables \n    temp <- temp_func(times)\n    rain <- rain_func(times)\n  \n    # Temperature-dependent equations obtained from Traore 2017 and Agusto 2020\n    # biting rate\n    a <-  -0.00014*temp^2 + 0.027*temp - 0.322\n    \n    # daily oviposition rate\n    ovi <- max(-0.153*temp^2 + 8.61*temp - 97.7, 0) # prevent values going below zero\n    \n    # death rate\n    mu_m <- -log(-0.000828*temp^2 + 0.0367*temp + 0.522)\n    \n    # carrying capacity\n    K <- max(Km*(rain+1), 1)  # ensure K stays above 1000\n    \n    # Force of infection\n    Infectious = C + zeta_a*A #infectious reservoir\n    lambda.v <- a*M/P*b*Im/M\n    lambda.h <- a*c*Infectious/P\n    \n    # Differential equations/rate of change\n    dSm = ovi*(1-M/K)*M - lambda.h*Sm - mu_m*Sm\n    dEm = lambda.h*Sm - (gamma_m + mu_m)*Em\n    dIm = gamma_m*Em - mu_m*Im\n    \n    dS = mu_h*P - lambda.v*S + rho*R - mu_h*S\n    dE = lambda.v*S - (gamma_h + mu_h)*E\n    dA = pa*gamma_h*E - (delta + mu_h)*A\n    dC = (1-pa)*gamma_h*E - (r + mu_h)*C\n    dR = delta*A + r*C - (rho + mu_h)*R\n    \n    dCInc = lambda.v*S\n    \n    \n    # Output\n    list(c(dSm, dEm, dIm, dS, dE, dA, dC, dR, dCInc))\n  })\n}\n\n\n# Initial values for compartments(approximations for Bulawayo, Zimbabwe)\ninitial_state <- c(Sm = 1000000, # susceptible mosquitoes\n                   Em = 100000, # exposed and infected mosquitoes\n                   Im = 200000, # infectious mosquitoes\n                   S = 350000, # susceptible humans\n                   E = 35000, # exposed and infected humans\n                   A = 130000, # asymptomatic and infectious humans\n                   C = 65000, # clinical and symptomatic humans\n                   R = 100000, # recovered and semi-immune humans\n                   CInc = 0 # cumulative incidence\n)\n# Country-specific parameters should be obtained from literature review and expert knowledge\nparameters <- c(#a = 0.45, # human biting rate\n                b = 0.5, # probability of transmission from mosquito to human\n                c = 0.6, # probability of transmission from human to mosquito\n                r = 1/21, # rate of loss of infectiousness after treatment\n                rho = 1/160, # rate of loss of immunity after recovery\n                delta = 1/150, # natural recovery rate\n                zeta_a = 0.4, # relative infectiousness of of asymptomatic infections\n                pa = 0.4, # probability of asymptomatic infection\n                #mu_m = 1/10, # birth and death rate of mosquitoes\n                mu_h = 1/(62*365), # birth and death rate of humans\n                gamma_m = 1/10, # extrinsic incubation rate of parasite in mosquitoes\n                gamma_h = 1/10, # extrinsic incubation rate of parasite in humans\n                Km = 50000 # carrying capacity for mosquito egg laying and pupae and larval development\n                )\n\n# Environmental forcings\n\ntemp_func <- approxfun(daily_temperature_values$tas, method = \"linear\", rule = 2)\nrain_func <- approxfun(daily_rainfall_values$PRCPTOT, method = \"linear\", rule = 2)\n    \n\n# Run the model\nout <- ode(y = initial_state, \n           times = times, \n           func = seacr, \n           parms = parameters,\n           temp_func = temp_func, \n           rain_func = rain_func)\n\n# Post-processing model output into a dataframe\n\ndf <- as_tibble(as.data.frame(out)) |> \n  mutate(P = S + E + A + C + R,\n         M = Sm + Em + Im,\n         Inc = c(0, diff(CInc))) |> \n  pivot_longer(cols = -time, names_to = \"variable\", values_to = \"value\") |> \n  mutate(date = ymd(\"2010-01-01\") + time)\n```\n:::\n\n\n\n\n### Changes in vector population\n\nAs mentioned earlier, environmental conditions affect the parasite and mosquito development, and as such we anticipate changes in the vector population to mimic the pattern in the temperature. In this example, we assume the human population stays constant as is shown in the panel on the right. The [UN Population Data portal page](https://jfunction.quarto.pub/healthradar/radar/datasources/malaria/un-population/un_population.html) describes human population growth in the context of disease modelling.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |> \n  filter(variable %in% c(\"M\", \"P\")) |> \n  mutate(\n    variable = factor(\n      variable,\n      levels = c(\"M\", \"P\"),\n      labels = c(\"Mosquitoes\", \"Humans\")\n    )\n  ) |>\n  ggplot() +\n  geom_line(aes(x = date, y = value, colour = variable)) +\n  theme_health_radar() +\n  scale_colour_manual_health_radar() +\n  theme(panel.spacing = unit(2, \"lines\")) +\n  scale_y_continuous(labels = scales::label_number(suffix = \" M\", scale = 1e-6)) +\n  labs(\n    title = \"Mosquito vector and human host populations over time\", \n    x = \"Year\",\n    y = \"Population size\",\n    colour = \"Population\",\n    caption = str_wrap(\"Changes in the total mosquito population mimic seasonal changes in temperature and rainfall values over time, with peaks in the summer months. The higher rainfall values in 2017 are also reflected in the mosquito population.  The human population remains constant in this example, as it is not driven by environmental conditions. Source: Model output\")\n  )\n```\n\n::: {.cell-output-display}\n![](cruts_files/figure-html/unnamed-chunk-11-1.png){fig-pos='H' width=672}\n:::\n:::\n\n\n\n### Implications for transmission and incidence\n\nThe force of infection (i.e. the rate at which susceptible individuals become infected per unit time) is largely driven by the human biting rate, the ratio of vectors relative to hosts, the probability of transmission and the size of the infectious reservoir. Below, we see how the temperature has driven the rate of new cases through the temperature-dependent variables.\n\nThis is especially insightful when the model includes periods of time impacted by severe environmental conditions such as drought or flooding, and the consequences on malaria transmission dynamics are reflected in the incidence values. Note that the example below is not an actual reflection of malaria transmission in Bulawayo, and is merely illustrative.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |> \n  filter(variable %in% \"Inc\", time > 50) |> \n  ggplot()+\n  geom_line(aes(x = date, y = value), colour = theme_health_radar_colours[17]) +\n  theme_health_radar() +\n  scale_colour_manual_health_radar() +\n  theme(legend.position = \"none\") +\n  scale_x_date(\n    date_breaks = \"1 year\",\n    date_minor_breaks = \"3 months\",\n    date_labels = \"%Y\"\n  ) +\n  labs(\n    title = \"Daily incidence values in the human population\", \n    x = \"Year\",\n    y = \"Number of new cases\",\n    caption = str_wrap(\"Incidence is highest during the summer months (October to February), where environmental conditions are suitable for mosquito breeding and malaria transmission. Incidence is close to zero between June and September. We see a small peak in 2017, coinciding with higher rainfall values that year, resulting in potentially larger mosquito populations driving incidence. Source: Model output\")\n  )\n```\n\n::: {.cell-output-display}\n![](cruts_files/figure-html/unnamed-chunk-12-1.png){fig-pos='H' width=672}\n:::\n:::\n\n\n\n\n### Citations\n\n-   Agusto, F. B., Gumel, A. B., & Parham, P. E. Qualitative assessment of the role of temperature variations on malaria transmission dynamics. Journal of Biological Systems, 23(04), 1550030 (2015). <https://doi.org/10.1142/S0218339015500308>\n-   Agusto, F.B. Optimal control and temperature variations of malaria transmission dynamics. Complexity, 1, 5056432 (2020). <https://doi.org/10.1155/2020/5056432>\n-   Traoré B, Sangaré B, Traoré S. A mathematical model of malaria transmission with structured vector population and seasonality. Journal of Applied Mathematics, 1, 6754097 (2017). <https://doi.org/10.1155/2017/6754097>\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}