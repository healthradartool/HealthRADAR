---
execute:
  warning: false
  error: false
---


```{r, output = FALSE}
library(terra)
library(ggplot2)
library(tidyterra) 
library(stringr)
source("../theme_health_radar.R")
```


A map is an effective way of visualising much of the data made available by CRU TS. Here, we plot mean annual rainfall and mean monthly average temperature on maps of southern Africa. 

```{r}
# Read the NetCDF file using terra
fig1_mean_annual_rainfall <- rast("Fig1_MeanAnnualRainfall_CRU_TS-4.08_1991-2020_SouthernAfrica.nc")

# Make 0 values NA
fig1_mean_annual_rainfall[fig1_mean_annual_rainfall == 0] <- NA

# Create the plot
ggplot() +
  # Add spatial raster layer with mean annual rainfall data
  geom_spatraster(data = fig1_mean_annual_rainfall, 
                  na.rm = TRUE) + # Remove NA values
  # Apply continuous fill scale with custom settings
  scale_fill_continuous_health_radar(na.value = "white", # Color for NA values
                                     name = "Mean Rainfall\n(mm/year)") + # Legend title
  # Apply custom health radar theme
  theme_health_radar() +  
  # Customize theme settings by removing the x- and y-axes, and grid lines
  theme(
    axis.text.x = element_blank(),        # Remove x-axis text
    axis.ticks.x = element_blank(),       # Remove x-axis ticks
    axis.text.y = element_blank(),        # Remove y-axis text
    axis.ticks.y = element_blank(),       # Remove y-axis ticks
    panel.grid.major = element_blank(),   # Remove major grid lines
    panel.grid.minor = element_blank()) + # Remove minor grid lines
  # Add labels for title and caption
  labs(
    title = "Mean Annual Rainfall for Southern Africa (1991-2020)", # Plot title
    caption = str_wrap("Mean annual rainfall over Southern Africa from 1991-2020, derived from CRU TS v4.08 data. The lowest mean annual rainfall occurs along the west coast of southern Africa, while the highest mean annual rainfall occurs along the equator, in Gabon, the Republic of the Congo and the Democratic Republic of the Congo. Data Source: Climatic Research Unit (University of East Anglia), CRU TS v4.08 Dataset (https://doi.org/10.1038/s41597-020-0453-3)", 
                       width = 75)) # Caption with data source and description
```

```{r}
fig2_mean_monthly_avg_temperature <- rast("Fig2_MeanMonthlyAverageTemp_CRU_TS-4.08_1991-2020_SouthernAfrica.nc")

# Create the plot
ggplot() +
  # Add spatial raster layer with mean monthly average temperature data
  geom_spatraster(data = fig2_mean_monthly_avg_temperature, 
                  na.rm = TRUE) + # Remove NA values
  # Apply continuous fill scale with custom settings
  scale_fill_continuous_health_radar(
    na.value = "white",                  # Color for NA values
    name = "Mean Temperature\n(Celsius)" # Legend title
  ) +
  # Apply custom theme for health radar
  theme_health_radar() +
  # Customize theme settings
  theme(
    plot.title.position = "plot",        # Position the plot title
    axis.text.x = element_blank(),       # Remove x-axis text
    axis.ticks.x = element_blank(),      # Remove x-axis ticks
    axis.text.y = element_blank(),       # Remove y-axis text
    axis.ticks.y = element_blank(),      # Remove y-axis ticks
    panel.grid.major = element_blank(),  # Remove major grid lines
    panel.grid.minor = element_blank()   # Remove minor grid lines
  ) +
  # Add labels for title and caption
  labs(
    title = "Mean Monthly Average Temperature for Southern Africa (1991-2020)", # Plot title
    caption = str_wrap("Mean monthly average temperature over Southern Africa from 1991-2020, derived from CRU TS v4.08 data. The lowest mean monthly average temperature appears to occur in the Drakensberg Mountains in Lesotho and South Africa. Data Source: Climatic Research Unit (University of East Anglia), CRU TS v4.08 Dataset (https://doi.org/10.1038/s41597-020-0453-3)", width = 75) # Caption with data source and description
  )
```
It can be useful for understanding a regions climate to visualise changes in temperature and rainfall together. This can be done by having a bar plot of monthly rainfall and a line plot of average monthly temperature on the same set of axes, with two different scales on the y-axis. 
```{r}
library(readr)

fig3_PRCPTOT_mon <- read_csv("Fig3_PRCPTOT_mon_CRU_TS-4.08_199101-202012_climatology_Bulawayo.csv")
fig3_tas_mon <- read_csv("Fig3_tas_mon_CRU_TS-4.08_199101-202012_climatology_Bulawayo.csv")

data = left_join(fig3_PRCPTOT_mon, fig3_tas_mon, by = c("time", "lat", "lon")) 

# Create the climatology plot
ggplot(data, x = time) +
  # Add bar plot for monthly rainfall
  geom_bar(stat = "identity", aes(x = time, y = PRCPTOT, fill = "Rainfall")) +
  # Add line plot for temperature, scaled by 10
  geom_line(aes(x = time, y = tas * 10, color = "Temperature")) +
  # Add points for temperature, scaled by 10
  geom_point(aes(x = time, y = tas * 10, color = "Temperature")) + 
  # Manually set fill color for rainfall bars
  scale_fill_manual(values = setNames(theme_health_radar_colours[1], "Rainfall")) +
  # Manually set color for temperature line and points
  scale_colour_manual(values = setNames(theme_health_radar_colours[2], "Temperature")) +
  # Set y-axis for rainfall and secondary y-axis for temperature
  scale_y_continuous(
    name = "Monthly Rainfall (mm)",
    sec.axis = sec_axis(~./10, name = "Temperature (Â°C)")) +
  # Set x-axis with month labels
  scale_x_continuous(
    breaks = 1:12,
    labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", 
               "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")) +
  # Apply custom theme for health radar
  theme_health_radar() +
  # Customize theme settings
  theme(
    axis.title.y.right = element_text(color = theme_health_radar_colours[2]),  # Match temperature line color
    axis.text.y.right = element_text(color = theme_health_radar_colours[2]),   # Match temperature line color
    axis.title.y.left = element_text(color = theme_health_radar_colours[1]),   # Match rainfall bar color
    axis.text.y.left = element_text(color = theme_health_radar_colours[1]),    # Match rainfall bar color
    legend.position = "none" # Remove legend
  ) +
  # Add labels for title and caption
  labs(
    title = "Seasonal Cycle of Rainfall and Temperature in Bulawayo", # Plot title
    x = "Month", # X-axis label
    caption = str_wrap("Monthly climatology of rainfall (bars) and average temperature (line) for Bulawayo, Zimbabwe, for the period 1991-2020, derived from CRU TS v4.08 data. We see Bulawayo experiences a significant proportion of its rainfall in the warm summer months and is very dry in the temperate winter months. Data Source: Climatic Research Unit (University of East Anglia), CRU TS v4.08 Dataset (https://doi.org/10.1038/s41597-020-0453-3)", width = 100) # Caption with data source and description
  )
```
The number of weather stations in use is an important consideration. If very few stations are contributing to a data point, its reliability may be in question. When looking at a time series of monthly rainfall and temperature, it can therefore be useful to consider these values within the context of the number of weather stations operating over time. 

```{r}
fig4_PRCPTOT_mon <- read_csv("Fig4_PRCPTOT_mon_CRU_TS-4.08_190101-202312_Bulawayo.csv")

# Create the timeseries plot
ggplot(data = fig4_PRCPTOT_mon) +
  # Add bar plot for monthly rainfall
  geom_col(aes(x = time, y = PRCPTOT, fill = "Rainfall")) +
  # Add points for station count, scaled by 40
  geom_point(aes(x = time, y = stn * 40, color = "Station Count")) +
  # Manually set fill color for rainfall bars
  scale_fill_manual(values = setNames(theme_health_radar_colours[1], "Rainfall")) +
  # Manually set color for station count points
  scale_colour_manual(values = setNames(theme_health_radar_colours[2], "Station Count")) +
  # Set y-axis for rainfall and secondary y-axis for station count
  scale_y_continuous(name = "Monthly Rainfall (mm)",
                     sec.axis = sec_axis(
                       ~./40, 
                       name = "Number of Stations",
                       breaks = seq(0, 10, 2))) +  
  # Set x-axis with date breaks and labels
  scale_x_date(date_breaks = "10 years", date_labels = "%Y") +
  # Apply custom theme for health radar
  theme_health_radar() +
  # Customize theme settings
  theme(
    axis.title.y.right = element_text(color = theme_health_radar_colours[2]), # Match station count color
    axis.text.y.right = element_text(color = theme_health_radar_colours[2]),  # Match station count color
    axis.title.y.left = element_text(color = theme_health_radar_colours[1]),  # Match rainfall color
    axis.text.y.left = element_text(color = theme_health_radar_colours[1]),   # Match rainfall color
    legend.position = "none" # Remove legend
  ) +
  # Add labels for title and caption
  labs(
    title = "Monthly Rainfall and Station Count in Bulawayo (1901-2023)", # Plot title
    x = "Year", # X-axis label
    caption = str_wrap("Monthly rainfall time series for Bulawayo, Zimbabwe, from 1901 to 2023, with orange points indicating the number of stations contributing to each monthly rainfall value. The data is derived from CRU TS v4.08. Notably, there is a decrease in the number of contributing stations from around 2010 onwards. Caution is advised when interpreting values calculated without any station data contributions. Data Source: Climatic Research Unit (University of East Anglia), CRU TS v4.08 Dataset (https://doi.org/10.1038/s41597-020-0453-3)", 
                       width = 100) # Caption with data source and description
  )
```


```{r}
fig5_tas_mon <- read_csv("Fig5_tas_mon_CRU_TS-4.08_190101-202312_Bulawayo.csv")

# Create the timeseries plot
ggplot(data = fig5_tas_mon) +
  # Add bar plot for monthly temperature, converting from Kelvin to Celsius
  geom_col(aes(x = time, y = tas - 273.15, fill = "Temperature")) +
  # Add points for station count, scaled by 4
  geom_point(aes(x = time, y = stn * 4, color = "Station Count")) +
  # Manually set fill color for temperature bars
  scale_fill_manual(values = setNames(theme_health_radar_colours[1], "Temperature")) +
  # Manually set color for station count points
  scale_colour_manual(values = setNames(theme_health_radar_colours[2], "Station Count")) +
  # Set y-axis for temperature and secondary y-axis for station count
  scale_y_continuous(name = "Monthly Temperature (Â°C)",
                     sec.axis = sec_axis( 
                       ~./4,
                       name = "Number of Stations",
                       breaks = seq(0, 10, 2))) + 
  # Set x-axis with date breaks and labels
  scale_x_date(date_breaks = "10 years",
               date_labels = "%Y") +
  # Apply custom theme for health radar
  theme_health_radar() +
  # Customize theme settings
  theme(
    axis.title.y.right = element_text(color = theme_health_radar_colours[2]), # Match station count color
    axis.text.y.right = element_text(color = theme_health_radar_colours[2]),  # Match station count color
    axis.title.y.left = element_text(color = theme_health_radar_colours[1]),  # Match temperature color
    axis.text.y.left = element_text(color = theme_health_radar_colours[1]),   # Match temperature color
    legend.position = "none" # Remove legend
  ) +
  # Add labels for title and caption
  labs(
    title = "Monthly Temperature and Station Count in Bulawayo (1901-2023)", # Plot title
    x = "Year", # X-axis label
    caption = str_wrap("Monthly average temperature time series for Bulawayo, Zimbabwe, from 1901 to 2023, with orange points indicating the number of stations contributing to each monthly average temperature value. The data is derived from CRU TS v4.08. The number of contributing stations remains at an adequate level throughout the time series, with a minimum of three stations. Data Source: Climatic Research Unit (University of East Anglia), CRU TS v4.08 Dataset (https://doi.org/10.1038/s41597-020-0453-3)", 
                       width = 100)) # Caption with data source and description
```



