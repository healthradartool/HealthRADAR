---
title: "United Nations Population Division Data"
description: "United Nations Population Division provides estimates and projections of demographic indicators for the years 1950 to 2100."
date: 13/12/2024 # mm-dd-yyyy
image: "images/logo_masha.png"  # descriptive image for thumbnail (logo works if it exists)
lightbox: true 
execute:
  message: false
  warning: false

language: 
  title-block-published: "Last updated"
  
page-layout: full
title-block-banner: "#EDF3F9"
title-block-banner-color: "#212529"
categories: # search tags to filter this data source
  - demographics
  - country-level
  - multi-national 
  - annual
---

```{r, output = FALSE}
source("../theme_health_radar.R")   # source in the theme functions
library(rdhs)
library(ggrepel)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(whowmr)
library(dplyr)
library(stringr)
library(tidyr)
library(forcats)
```

## About the dataset

The United Nations produces and regularly updates estimates of various demographic indicators for 237 countries or areas for the period between 1950 and the present. In addition, they currently have projections of the indicators for the period between the present and the year 2100. These estimates and projections are made based on available censuses and nationally representative sample surveys.

Indicators such as population size and density, total births and deaths, infant mortality rate, median age and population sex ratio are available. Data for countries and their territories are recorded separately as well as together. Grouped data for continents or groups of countries, states or territories such as "Small Island Developing States (SIDS)" or "Land-locked Countries" is also available.

## Accessing the dataset

1.  Navigate to the UN population division [home page](https://www.un.org/development/desa/pd/)
2.  Select Data \> World Population Prospects.
3.  This will take you to a new page. If you only require a subset of the available data, do the following:
    -   Navigate to Data \> Data Portal.
    -   Choose the desired indicators, locations and years from the dropdown menus, and then press "Search". The resulting page will allow you to view plots of the data.
    -   Navigating to Table \> Export \> CSV will download the selected data as a CSV file. Be aware that searching a large dataset can take a long time. Using the "Download Center" (Step 4) may be more efficient in this case.
4.  To download the full dataset which we use in this tutorial, select Data \> Download Center from the [World Population Prospects page](https://population.un.org/wpp/). The [webpage](https://population.un.org/wpp/Download/Standard/MostUsed/) to which you have now navigated provides options for download.
    -   Under the title "Major topic/ Special groupings", select the "CSV format" option. Information about the data will be displayed. Scrolling down reveals a table containing links to download various CSV files. For the purposes of this tutorial, the file containing data from the subgroup "Demographic Indicators", labelled "1950-2100, medium (GZ, 15.79 MB)", will be used.

## What does the dataset look like?

This dataset contains estimates or projections for a number of demographic indicators between the years 1950 and 2101. It is not separated by age and is presented in long format, with each row providing values for all indicators for a given country or area in a given year.

![Layout of the CSV file opened in Microsoft Excel, displaying nine of 67 columns, and 11 of 84 360 rows.](pop_csv.png)

The indicator labels are not all self explanatory. Below is a table which provides slightly more detail for each indicator:

```{r, echo = FALSE}
library(stringr)
labs              <- str_split(read.table("indicator_labs.txt")$V1, ",")[[1]][-(1:13)]    # remove location and time vars
detail            <- read.table("indicator_detail.txt", sep = "\n")$V1[-1]                # row one is a heading
timeloc           <- read.table("time_loc_inds.txt", sep = c(":", "\n"))[-13,] # midperiod not recorded for dataset of interest
colnames(timeloc) <- c("labs", "detail")

table             <- rbind(timeloc, cbind(labs, detail))
colnames(table) <- c("Name", "Description")

gt::gt(table, caption = "The label used for each indicator in the dataset of interest, along with a description of this indicator. ")
```

## Key points to consider

**Estimations and Projections:**

This dataset uses data from censuses and other surveys to generate estimations of demographic indicators between 1950 and the present, and projections of these same indicators from the present to the year 2100.

**Pitfalls of Annual Data:**

Using annual data for your analysis can lead to several pitfalls:

-   Seasonal variations: Annual data may not capture seasonal patterns in population movement, which can be influenced by social or climatic factors. This can lead to an over- or underestimation of the disease spread and the impact of interventions.

-   Temporal aggregation: Aggregating data annually may mask important short-term dynamics, such as movements of people around smaller holidays or due to unusual climatic events.

Note that this dataset does record total population size in thousands as of 1 January and 1 June of each year. Combining these indicators to get biannual data will decrease the impact of some of the pitfalls detailed above.

**National Level - Ignoring Spatial Heterogeneity:**

Modelling malaria transmission based on population sizes at a national level can overlook important spatial heterogeneities:

-   Regional variations: Malaria transmission can vary significantly between different regions within a country due to differences in population densities and other demographic factors.

-   Local hotspots: Even within regions, there can be local hotspots of malaria transmission due to factors such as population density and human behavior.

-   Population movement: The movement of people between different areas can introduce or reintroduce malaria parasites, affecting transmission dynamics. By only looking at movement of people between countries, we will miss these subnational movements.

While some of the locations for which data are provided are territories, regions or states, there are no countries for which the data can be separated by subregion such as province.

## How to use this dataset

Long format tables are often easier to work with. Below is a code chunk which converts the dataset as downloaded from the UN Population Division webpage to a longer format, and prints out the "Location", "Time", "Indicator" and "Value" columns.

```{r}
# Read in data
data <- read.csv("WPP2024_Demographic_Indicators_Medium.csv")

dat_long <- pivot_longer(data, 14:ncol(data), names_to = "Indicator", values_to = "Value") 
dat_long[,which(colnames(dat_long) %in% c("Location", "Time", "Indicator", "Value"))] |> 
  head(n = 10) |> 
  gt::gt()
```

## How to plot this dataset

```{r}
# Define the elimination 8 countries
e8_countries <- c("Botswana", "Eswatini", "Namibia", "South Africa", "Angola", "Mozambique", "Zambia", "Zimbabwe")

# Load the map data for Africa
e8_africa <- ne_countries(continent = "Africa", returnclass = "sf") |>
  mutate(name = if_else(name=="eSwatini", "Eswatini", name)) |> # Correct the name for Eswatini
  filter(name %in% e8_countries) # Filter to include only the elimination 8 countries

# Filter long table so that only the 1 Jan population estimates for 2024 are shown
dat_long_pop2024 <- filter(dat_long, Time == 2024 & Indicator == "TPopulation1Jan")

# Merge the map data with your data
e8_data <- e8_africa |>
  left_join(dat_long_pop2024 |> mutate(), by = c("name" = "Location"))  

```

A map which fills each country according to their estimated population sizes is displayed below. This is an effective way of visualising the population sizes of various countries at a given point in time.

```{r}
# Create the choropleth map
ggplot(data = e8_data) +
  # Plot the map with population data
  geom_sf(aes(fill = Value), color = "lightgrey", size = 0.3) +  
  theme_health_radar() +  # Apply custom theme
  # Name fill scale for continuous data
  scale_fill_continuous_health_radar(name = "Pop Size (in thousands)") + 
  # Add caption and title to the plot
  labs(title = "Estimated population sizes of the E8 countries (2024)",
       caption = str_wrap("The population size estimates in thousands in the Elimination 8 (E8) countries in 2024, with South Africa having the largest population of over 60 million people, and Namibia and Botswana having the smallest populations. The data are estimates made based on census and sample data. Source: UN Population Division.", width = 70)) + 
  # Conditional text color to ensure readability
  geom_sf_text(aes(label = name, color = ifelse(Value > quantile(Value, 0.75), "black", "white")), size = 3) +  
  # Apply color scale
  scale_color_identity() +  
  # Remove x- and y-axis and grid lines
  theme(
    plot.caption.position = "plot",
    plot.title.position = "plot",
    axis.title.x=element_blank(),
    axis.text.x=element_blank(),
    axis.ticks.x=element_blank(),
    axis.title.y=element_blank(),
    axis.text.y=element_blank(),
    axis.ticks.y=element_blank(),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank()  
  )
```

This UN dataset provides estimations and projections for population sizes over time. An easy way to visualise these data is using a line plot, with different lines representing the populations of different countries.

```{r}
# Create a line plot for population size in the E8 countries over time
dat_long |>
  # Filter for the E8 countries
  filter(Location |> 
           stringr::str_detect("Angola|Botswana|Eswatini|Mozambique|Namibia|South Africa|Zambia|Zimbabwe") & 
           Indicator == "TPopulation1Jan") |>
  ggplot(aes(x = Time, y = Value, group = Location, color = Location)) +
  # Plot the population data as lines
  geom_line(lwd = 1) +  
  # Add a dashed vertical line at the year 2024
  geom_vline(xintercept = 2024, linetype = "dashed") +  
  # Apply manual color scale for "color" aesthetic (lines)
  scale_colour_manual_health_radar() +  
  # Apply custom theme
  theme_health_radar() +  
  # Add labels and title to the plot
  labs(
    title = "Estimated and projected population sizes (1950-2100)",
    x = "Year",
    y = "Population Size (in thousands)",
    color = "E8 Country",
    caption = str_wrap("The estimated population sizes in thousands in the Elimination 8 (E8) countries from 1950 to 2024, and projected population sizes between 2025 and 2100. The dashed black line indicates the year in which these estimations and projections were produced: 2024. These data are recorded annually, and may therefore miss seasonal variations in population size. Population growth is evident across all eight countries since 1950, with many of the populations projected to plateau by 2100. Source: UN Population Division.", width = 85))

```

Stacked and faceted bar plots can be used to visualise the contributions of males and females to the total populations of various countries at a few distinct time points, as seen below.

```{r}
# Filter the data for the E8 countries, the indicators "TPopulationFemale1July" and "TPopulationMale1July", and for the years 2000, 2010, and 2020
dat_pop_mvf <- dat_long |> 
  filter(Location |> 
           stringr::str_detect("Angola|Botswana|Eswatini|Mozambique|Namibia|South Africa|Zambia|Zimbabwe") & 
           Indicator %in% c("TPopulationFemale1July", "TPopulationMale1July") & 
           Time %in% seq(2000, 2020, 10))
# Rename the indicators to more readable labels
dat_pop_mvf[dat_pop_mvf == "TPopulationFemale1July"] <- "Female"
dat_pop_mvf[dat_pop_mvf == "TPopulationMale1July"] <- "Male"
# Create ggplot object
ggplot(dat_pop_mvf, aes(x = Time, y = Value, fill = Indicator)) +
  # Create stacked bars
  geom_bar(stat = "identity", position = "stack") +  
  # Create separate plots for each country
  facet_wrap(~ Location, scales = "free_y") +  
  # Apply the custom fill scale for sex
  scale_fill_manual_health_radar() +
  # Apply the custom radar theme
  theme_health_radar() +  
  labs(
    title = "Estimated or projected population sizes in 2000, 2010 and 2020",
    x = "Year",
    y = "Population Size (in thousands)",
    fill = "Sex",
    caption = str_wrap("The estimated or projected numbers of males and females making up the populations of each of the Elimination 8 (E8) countries in 2000, 2010 and 2020. Note the difference in y-axis range for each stacked barplot, indicating different population sizes. No country appears to have a ratio of males to females which differs greatly from 1:1.  Source: UN Population Division.", width = 85)) 
```
